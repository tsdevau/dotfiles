# You can use it to add commands that run after login to macOS user session.
# "start-at-login" needs to be "true" for "after-login-command" to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# "after-startup-command" is run after "after-login-command"
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Notify Sketchybar about workspace change
exec-on-workspace-change = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The "accordion-padding" specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = "tiles"

# Possible values: horizontal|vertical|auto
# "auto" means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = "auto"

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don"t like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ["move-mouse monitor-lazy-center"]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don"t use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = "qwerty"

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for "workspace-to-monitor-force-assignment".
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 16
inner.vertical = 16
outer.left = 16
outer.bottom = 16
outer.top = 16
outer.right = 16

##### Floating Layout Apps #####
[[on-window-detected]]
if.app-id = "com.stairways.keyboardmaestro.editor"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.apple.finder"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.apple.MobileSMS"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.apple.Preview"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.1password.1password"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.openai.chat"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.anthropic.claudefordesktop"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.sbs.diet"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.apple.iCal"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.apple.reminders"
run = ["layout floating"]

[[on-window-detected]]
if.app-id = "com.p5sys.jump.mac.viewer.web"
run = ["layout floating"]

##### Move to set Workspace Apps #####
# Dev Workspace
[[on-window-detected]]
if.app-id = "com.exafunction.windsurf"
run = ["move-node-to-workspace Development --focus-follows-window"]

[[on-window-detected]]
if.app-id = "com.microsoft.VSCode"
run = ["move-node-to-workspace Development --focus-follows-window"]

[[on-window-detected]]
if.app-id = "com.todesktop.230313mzl4w4u92"
run = ["move-node-to-workspace Development --focus-follows-window"]

[[on-window-detected]]
if.app-id = "com.zed.Zed"
run = ["move-node-to-workspace Development --focus-follows-window"]

# Web Workspace
[[on-window-detected]]
if.app-id = "com.apple.Safari"
run = ["move-node-to-workspace Web --focus-follows-window"]

[[on-window-detected]]
if.app-id = "com.google.Chrome"
run = ["move-node-to-workspace Web --focus-follows-window"]

# Utilities
[[on-window-detected]]
if.app-id = "com.microsoft.Excel"
run = [
  "layout tiling",
  "move-node-to-workspace Utilities --focus-follows-window",
]

[[on-window-detected]]
if.app-id = "com.microsoft.Word"
run = [
  "layout tiling",
  "move-node-to-workspace Utilities --focus-follows-window",
]

[[on-window-detected]]
if.app-id = "com.dygmalab.bazecor"
run = [
  "layout tiling",
  "move-node-to-workspace Utilities --focus-follows-window",
]

# Camera Workspace
[[on-window-detected]]
if.app-id = "com.colliderli.iina"
run = [
  "layout floating",
  "move-node-to-workspace Cameras --focus-follows-window",
]


# "main" binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# "main" binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-alt-shift-slash = "layout tiles horizontal vertical"
ctrl-alt-shift-comma = "layout accordion horizontal vertical"
ctrl-alt-shift-f = "layout floating tiling"

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-shift-h = "focus left"
ctrl-alt-shift-j = "focus down"
ctrl-alt-shift-k = "focus up"
ctrl-alt-shift-l = "focus right"

# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-ctrl-alt-shift-h = "move left"
cmd-ctrl-alt-shift-j = "move down"
cmd-ctrl-alt-shift-k = "move up"
cmd-ctrl-alt-shift-l = "move right"

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-alt-shift-minus = "resize smart -50"
ctrl-alt-shift-equal = "resize smart +50"

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-alt-shift-1 = "workspace Home"
ctrl-alt-shift-c = "workspace Cameras"
ctrl-alt-shift-d = "workspace Development"
ctrl-alt-shift-w = "workspace Web"
ctrl-alt-shift-m = "workspace Mail"
ctrl-alt-shift-s = "workspace Spare"
ctrl-alt-shift-t = "workspace Terminal"
ctrl-alt-shift-u = "workspace Utilities"

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-ctrl-alt-shift-1 = "move-node-to-workspace Home --focus-follows-window"
cmd-ctrl-alt-shift-c = "move-node-to-workspace Cameras --focus-follows-window"
cmd-ctrl-alt-shift-d = "move-node-to-workspace Development --focus-follows-window"
cmd-ctrl-alt-shift-w = "move-node-to-workspace Web --focus-follows-window"
cmd-ctrl-alt-shift-m = "move-node-to-workspace Mail --focus-follows-window"
cmd-ctrl-alt-shift-s = "move-node-to-workspace Spare --focus-follows-window"
cmd-ctrl-alt-shift-t = "move-node-to-workspace Terminal --focus-follows-window"
cmd-ctrl-alt-shift-u = "move-node-to-workspace Utilities --focus-follows-window"

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
ctrl-alt-shift-tab = "focus-back-and-forth"

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
# cmd-ctrl-alt-shift-tab = "move-workspace-to-monitor --wrap-around next"

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-ctrl-alt-shift-semicolon = "mode service"

# "service" binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes

[mode.service.binding]
esc = ["reload-config", "mode main"]
backspace = ["close-all-windows-but-current", "mode main"]

# reset layout
r = ["flatten-workspace-tree", "mode main"]
# Toggle between floating and tiling layout
f = ["layout floating tiling", "mode main"]

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ["layout sticky tiling", "mode main"]

cmd-ctrl-alt-shift-h = ["join-with left", "mode main"]
cmd-ctrl-alt-shift-j = ["join-with down", "mode main"]
cmd-ctrl-alt-shift-k = ["join-with up", "mode main"]
cmd-ctrl-alt-shift-l = ["join-with right", "mode main"]

down = "volume down"
up = "volume up"
shift-down = ["volume set 0", "mode main"]
