{
  "version": 3,
  "sources": ["../src/tmux-cheatsheet.tsx", "../node_modules/fuse.js/dist/fuse.mjs", "../src/tmuxCommands.ts", "../src/CommandDetail.tsx"],
  "sourcesContent": ["import { Action, ActionPanel, List, useNavigation } from \"@raycast/api\";\nimport { useMemo, useState, useEffect } from \"react\";\nimport Fuse from \"fuse.js\";\nimport { tmuxCommands, TmuxCommand } from \"./tmuxCommands\";\nimport CommandDetail from \"./CommandDetail\";\n\n// Custom debounce hook\nfunction useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport default function Command() {\n  const [searchText, setSearchText] = useState(\"\");\n  const { push } = useNavigation(); // Navigation hook to push details page\n\n  // Use our custom debounce hook to update the search text after 100ms of inactivity.\n  const debouncedSearchText = useDebounce(searchText, 100);\n\n  // Memoize Fuse options for efficiency.\n  const fuseOptions = useMemo(\n    () => ({\n      keys: [\"id\", \"command\", \"description\", \"category\", \"benefit\"],\n      includeScore: true,\n      threshold: 0.4, // Adjust to fine-tune matching leniency.\n    }),\n    [],\n  );\n\n  // Create a Fuse index only once (since tmuxCommands is static).\n  const fuse = useMemo(() => new Fuse(tmuxCommands, fuseOptions), [fuseOptions]);\n\n  // Filter commands based on the debounced search text.\n  const filteredCommands: TmuxCommand[] = useMemo(() => {\n    if (debouncedSearchText.trim() === \"\") {\n      return tmuxCommands;\n    }\n    return fuse.search(debouncedSearchText).map((result) => result.item);\n  }, [debouncedSearchText, fuse]);\n\n  return (\n    <List navigationTitle=\"Tmux Commands\" searchText={searchText} onSearchTextChange={setSearchText}>\n      {filteredCommands.map((cmd) => (\n        <List.Item\n          key={cmd.id}\n          title={cmd.id}\n          subtitle={cmd.description}\n          accessories={[{ text: cmd.category }]}\n          icon={cmd.icon}\n          actions={\n            <ActionPanel>\n              <Action title=\"View Details\" onAction={() => push(<CommandDetail command={cmd} />)} />\n              <Action.CopyToClipboard title=\"Copy Command\" content={cmd.command} />\n            </ActionPanel>\n          }\n        />\n      ))}\n    </List>\n  );\n}\n", "/**\n * Fuse.js v7.1.0 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2025 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When `true`, the algorithm will ignore diacritics (accents) in comparisons\n  ignoreDiacritics: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nconst stripDiacritics = String.prototype.normalize\n    ? ((str) => str.normalize('NFD').replace(/[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA8FF\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F]/g, ''))\n    : ((str) => str);\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreDiacritics,\n      ignoreLocation\n    };\n\n    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;\n    this.pattern = pattern;\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, ignoreDiacritics, includeMatches } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n    text = ignoreDiacritics ? stripDiacritics(text) : text;\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreDiacritics,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// \u2757Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreDiacritics = Config.ignoreDiacritics,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      ignoreDiacritics,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    pattern = ignoreDiacritics ? stripDiacritics(pattern) : pattern;\n    this.pattern = pattern;\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive, ignoreDiacritics } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n    text = ignoreDiacritics ? stripDiacritics(text) : text;\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '7.1.0';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n", "import { Icon } from \"@raycast/api\";\n\nexport interface TmuxCommand {\n  id: string;\n  command: string;\n  description: string;\n  category: string;\n  icon?: string; // Optional: Path or system icon identifier.\n  benefit?: string; // Optional: Explains why the command is useful.\n}\n\nexport const tmuxCommands: TmuxCommand[] = [\n  // Session Commands\n  {\n    id: \"new-session\",\n    command: \"tmux new-session -s <session_name>\",\n    description: \"Creates a new session. (Terminal: `tmux new-session -s <session_name>`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.Window,\n    benefit: \"Starting a new session helps you isolate tasks and organize your workflow.\",\n  },\n  {\n    id: \"attach-session\",\n    command: \"tmux attach-session -t <session_name>\",\n    description:\n      \"Attaches to an existing session. (Terminal: `tmux attach-session -t <session_name>`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.Window,\n    benefit: \"Reattach to a running session without interrupting your ongoing processes.\",\n  },\n  {\n    id: \"list-sessions\",\n    command: \"tmux list-sessions\",\n    description: \"Lists all active sessions. (Terminal: `tmux list-sessions`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.Window,\n    benefit: \"View all active sessions to manage and switch between them efficiently.\",\n  },\n  {\n    id: \"kill-session\",\n    command: \"tmux kill-session -t <session_name>\",\n    description: \"Kills the specified session. (Terminal: `tmux kill-session -t <session_name>`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.Window,\n    benefit: \"Terminate sessions you no longer need to free up system resources.\",\n  },\n  {\n    id: \"rename-session\",\n    command: \"tmux rename-session <new_name>\",\n    description: \"Renames the current session. (Terminal: `tmux rename-session <new_name>`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.Window,\n    benefit: \"Renaming sessions makes them easier to identify and manage.\",\n  },\n  {\n    id: \"detach\",\n    command: \"tmux detach\",\n    description:\n      \"Detaches from the current session. Shortcut: `<C-b> + d` (or `<Leader> + d`)\\nTerminal: `tmux detach`\",\n    category: \"Session Commands\",\n    icon: Icon.Eject,\n    benefit: \"Detach from your session while leaving it running in the background.\",\n  },\n  {\n    id: \"kill-server\",\n    command: \"tmux kill-server\",\n    description:\n      \"Kills the tmux server, terminating all sessions. (Terminal: `tmux kill-server`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.Trash,\n    benefit: \"Terminate all tmux sessions and stop the tmux server. Use with caution.\",\n  },\n  {\n    id: \"list-clients\",\n    command: \"tmux list-clients\",\n    description: \"Lists all tmux clients attached to the server. (Terminal: `tmux list-clients`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.List,\n    benefit: \"Identify all tmux clients and manage your connections efficiently.\",\n  },\n  {\n    id: \"switch-client\",\n    command: \"tmux switch-client -t <client_name>\",\n    description:\n      \"Switches to another tmux client. (Terminal: `tmux switch-client -t <client_name>`) (No default shortcut)\",\n    category: \"Session Commands\",\n    icon: Icon.ArrowRight,\n    benefit: \"Quickly switch between multiple tmux client sessions.\",\n  },\n\n  // Window Commands\n  {\n    id: \"new-window\",\n    command: \"tmux new-window -n <window_name>\",\n    description:\n      \"Creates a new window. Shortcut: `<C-b> + c` (or `<Leader> + c`)\\nTerminal: `tmux new-window -n <window_name>`\",\n    category: \"Window Commands\",\n    icon: Icon.Sidebar,\n    benefit: \"New windows allow you to organize different tasks within the same session.\",\n  },\n  {\n    id: \"rename-window\",\n    command: \"tmux rename-window <new_name>\",\n    description:\n      \"Renames the current window. Shortcut: `<C-b> + ,` (or `<Leader> + ,`)\\nTerminal: `tmux rename-window <new_name>`\",\n    category: \"Window Commands\",\n    icon: Icon.Pencil,\n    benefit: \"Renaming windows helps you keep track of your work and improve navigation.\",\n  },\n  {\n    id: \"kill-window\",\n    command: \"tmux kill-window\",\n    description: \"Kills the current window. Shortcut: `<C-b> + &` (or `<Leader> + &`)\\nTerminal: `tmux kill-window`\",\n    category: \"Window Commands\",\n    icon: Icon.Sidebar,\n    benefit: \"Close windows you no longer need to streamline your session.\",\n  },\n  {\n    id: \"list-windows\",\n    command: \"tmux list-windows\",\n    description:\n      \"Lists all windows in the session. Shortcut: `<C-b> + w` (or `<Leader> + w`)\\nTerminal: `tmux list-windows`\",\n    category: \"Window Commands\",\n    icon: Icon.Sidebar,\n    benefit: \"View all windows to quickly switch between different tasks.\",\n  },\n  {\n    id: \"next-window\",\n    command: \"tmux next-window\",\n    description: \"Moves to the next window. Shortcut: `<C-b> + n` (or `<Leader> + n`)\\nTerminal: `tmux next-window`\",\n    category: \"Window Commands\",\n    icon: Icon.Sidebar,\n    benefit: \"Cycle forward through windows to find the one you need.\",\n  },\n  {\n    id: \"previous-window\",\n    command: \"tmux previous-window\",\n    description:\n      \"Moves to the previous window. Shortcut: `<C-b> + p` (or `<Leader> + p`)\\nTerminal: `tmux previous-window`\",\n    category: \"Window Commands\",\n    icon: Icon.Sidebar,\n    benefit: \"Cycle backward through windows to quickly access your last window.\",\n  },\n  {\n    id: \"last-window\",\n    command: \"tmux last-window\",\n    description:\n      \"Toggles to the last active window. Shortcut: `<C-b> + l` (or `<Leader> + l`)\\nTerminal: `tmux last-window`\",\n    category: \"Window Commands\",\n    icon: Icon.Sidebar,\n    benefit: \"Quickly return to the most recently used window.\",\n  },\n  {\n    id: \"select-window\",\n    command: \"tmux select-window -t <window_name_or_index>\",\n    description:\n      \"Selects a window by name or index. (Terminal: `tmux select-window -t <window_name_or_index>`) (No default shortcut)\",\n    category: \"Window Commands\",\n    icon: Icon.Sidebar,\n    benefit: \"Directly switch to a specific window in the session.\",\n  },\n  {\n    id: \"respawn-window\",\n    command: \"tmux respawn-window -k -t <window_name>\",\n    description:\n      \"Respawns the current window, restarting its shell or command. (Terminal: `tmux respawn-window -k -t <window_name>`) (No default shortcut)\",\n    category: \"Window Commands\",\n    icon: Icon.RotateClockwise,\n    benefit: \"Restart a misbehaving window without closing the session.\",\n  },\n\n  // Pane Commands\n  {\n    id: \"split-window-vertical\",\n    command: \"tmux split-window -v\",\n    description:\n      'Splits the pane vertically. Shortcut: `<C-b> + \"` (or `<Leader> + \"`)\\nTerminal: `tmux split-window -v`',\n    category: \"Pane Commands\",\n    icon: Icon.Terminal,\n    benefit: \"Divide your current pane vertically for side-by-side task management.\",\n  },\n  {\n    id: \"split-window-horizontal\",\n    command: \"tmux split-window -h\",\n    description:\n      \"Splits the pane horizontally. Shortcut: `<C-b> + %` (or `<Leader> + %`)\\nTerminal: `tmux split-window -h`\",\n    category: \"Pane Commands\",\n    icon: Icon.Terminal,\n    benefit: \"Divide your current pane horizontally for stacked task management.\",\n  },\n  {\n    id: \"select-pane-up\",\n    command: \"tmux select-pane -U\",\n    description:\n      \"Moves focus to the pane above. Shortcut: `<C-b> + Up Arrow` (or `<Leader> + Up Arrow`)\\nTerminal: `tmux select-pane -U`\",\n    category: \"Pane Commands\",\n    icon: Icon.ArrowUp,\n    benefit: \"Shift focus upward to access the pane above.\",\n  },\n  {\n    id: \"select-pane-down\",\n    command: \"tmux select-pane -D\",\n    description:\n      \"Moves focus to the pane below. Shortcut: `<C-b> + Down Arrow` (or `<Leader> + Down Arrow`)\\nTerminal: `tmux select-pane -D`\",\n    category: \"Pane Commands\",\n    icon: Icon.ArrowDown,\n    benefit: \"Shift focus downward to access the pane below.\",\n  },\n  {\n    id: \"select-pane-left\",\n    command: \"tmux select-pane -L\",\n    description:\n      \"Moves focus to the pane left of the current one. Shortcut: `<C-b> + Left Arrow` (or `<Leader> + Left Arrow`)\\nTerminal: `tmux select-pane -L`\",\n    category: \"Pane Commands\",\n    icon: Icon.ArrowLeft,\n    benefit: \"Shift focus to the pane on the left.\",\n  },\n  {\n    id: \"select-pane-right\",\n    command: \"tmux select-pane -R\",\n    description:\n      \"Moves focus to the pane right of the current one. Shortcut: `<C-b> + Right Arrow` (or `<Leader> + Right Arrow`)\\nTerminal: `tmux select-pane -R`\",\n    category: \"Pane Commands\",\n    icon: Icon.ArrowRight,\n    benefit: \"Shift focus to the pane on the right.\",\n  },\n  {\n    id: \"display-panes\",\n    command: \"tmux display-panes\",\n    description:\n      \"Displays pane numbers to assist in selection. Shortcut: `<C-b> + q` (or `<Leader> + q`)\\nTerminal: `tmux display-panes`\",\n    category: \"Pane Commands\",\n    icon: Icon.Hashtag,\n    benefit: \"Show pane numbers for quick selection by number.\",\n  },\n  {\n    id: \"kill-pane\",\n    command: \"tmux kill-pane\",\n    description:\n      \"Kills the current pane. (Usually run via command prompt as there\u2019s no default shortcut.)\\nTerminal: `tmux kill-pane`\",\n    category: \"Pane Commands\",\n    icon: Icon.Trash,\n    benefit: \"Terminate a pane you no longer need.\",\n  },\n  {\n    id: \"swap-pane\",\n    command: \"tmux swap-pane -s <src-pane> -t <dst-pane>\",\n    description:\n      \"Swaps two panes. (Run via the command prompt.)\\nTerminal: `tmux swap-pane -s <src-pane> -t <dst-pane>`\",\n    category: \"Pane Commands\",\n    icon: Icon.ArrowClockwise,\n    benefit: \"Swap the positions of two panes for a better layout.\",\n  },\n  {\n    id: \"move-pane\",\n    command: \"tmux move-pane -s <src-pane> -t <dst-pane>\",\n    description:\n      \"Moves a pane from one location to another. (Run via the command prompt.)\\nTerminal: `tmux move-pane -s <src-pane> -t <dst-pane>`\",\n    category: \"Pane Commands\",\n    icon: Icon.ArrowClockwise,\n    benefit: \"Reposition a pane within your layout.\",\n  },\n  {\n    id: \"break-pane\",\n    command: \"tmux break-pane\",\n    description: \"Breaks the current pane into a separate window. (Terminal: `tmux break-pane`) (No default shortcut)\",\n    category: \"Pane Commands\",\n    icon: Icon.Window,\n    benefit: \"Promote a pane to its own window for focused work.\",\n  },\n  {\n    id: \"join-pane\",\n    command: \"tmux join-pane -s <source-pane> -t <target-pane>\",\n    description:\n      \"Joins a pane from another window into the current window. (Terminal: `tmux join-pane -s <source-pane> -t <target-pane>`) (No default shortcut)\",\n    category: \"Pane Commands\",\n    icon: Icon.ArrowClockwise,\n    benefit: \"Merge a pane from a different window into the current layout.\",\n  },\n  {\n    id: \"capture-pane\",\n    command: \"tmux capture-pane -S -\",\n    description:\n      \"Captures the contents of the current pane. (Terminal: `tmux capture-pane -S -`) (No default shortcut)\",\n    category: \"Pane Commands\",\n    icon: Icon.Document,\n    benefit: \"Capture the output of a pane for later review or logging.\",\n  },\n  {\n    id: \"list-panes\",\n    command: \"tmux list-panes\",\n    description: \"Lists all panes in the current window. (Terminal: `tmux list-panes`) (No default shortcut)\",\n    category: \"Pane Commands\",\n    icon: Icon.List,\n    benefit: \"View all panes in the current window for better navigation.\",\n  },\n  {\n    id: \"pipe-pane\",\n    command: \"tmux pipe-pane -o 'cat > output.txt'\",\n    description:\n      \"Pipes output from a pane to an external command or file. (Terminal: `tmux pipe-pane -o 'cat > output.txt'`) (No default shortcut)\",\n    category: \"Pane Commands\",\n    icon: Icon.Terminal,\n    benefit: \"Redirect pane output to a file or command for logging or processing.\",\n  },\n  {\n    id: \"respawn-pane\",\n    command: \"tmux respawn-pane -k -t <pane_id>\",\n    description:\n      \"Respawns the current pane, restarting its command. (Terminal: `tmux respawn-pane -k -t <pane_id>`) (No default shortcut)\",\n    category: \"Pane Commands\",\n    icon: Icon.RotateClockwise,\n    benefit: \"Restart a misbehaving pane without disrupting the rest of your layout.\",\n  },\n\n  // Resize Commands\n  {\n    id: \"resize-pane-left\",\n    command: \"tmux resize-pane -L 10\",\n    description: \"Resizes the pane by moving its left border left 10 cells.\\n(Terminal: `tmux resize-pane -L 10`)\",\n    category: \"Resize Commands\",\n    icon: Icon.ChevronLeft,\n    benefit: \"Decrease the pane width by shifting its left boundary.\",\n  },\n  {\n    id: \"resize-pane-right\",\n    command: \"tmux resize-pane -R 10\",\n    description: \"Resizes the pane by moving its right border right 10 cells.\\n(Terminal: `tmux resize-pane -R 10`)\",\n    category: \"Resize Commands\",\n    icon: Icon.ChevronRight,\n    benefit: \"Increase the pane width by shifting its right boundary.\",\n  },\n  {\n    id: \"resize-pane-up\",\n    command: \"tmux resize-pane -U 5\",\n    description: \"Resizes the pane by moving its top border up 5 cells.\\n(Terminal: `tmux resize-pane -U 5`)\",\n    category: \"Resize Commands\",\n    icon: Icon.ChevronUp,\n    benefit: \"Decrease the pane height by shifting its top boundary.\",\n  },\n  {\n    id: \"resize-pane-down\",\n    command: \"tmux resize-pane -D 5\",\n    description: \"Resizes the pane by moving its bottom border down 5 cells.\\n(Terminal: `tmux resize-pane -D 5`)\",\n    category: \"Resize Commands\",\n    icon: Icon.ChevronDown,\n    benefit: \"Increase the pane height by shifting its bottom boundary.\",\n  },\n\n  // Copy/Paste Commands\n  {\n    id: \"copy-mode\",\n    command: \"tmux copy-mode\",\n    description:\n      \"Enters copy mode for scrolling/selecting text. Shortcut: `<C-b> + [` (or `<Leader> + [`)\\nTerminal: `tmux copy-mode`\",\n    category: \"Copy/Paste Commands\",\n    icon: Icon.Clipboard,\n    benefit: \"Enter copy mode to navigate and select text from your terminal history.\",\n  },\n  {\n    id: \"paste-buffer\",\n    command: \"tmux paste-buffer\",\n    description:\n      \"Pastes from the copy buffer. Shortcut: `<C-b> + ]` (or `<Leader> + ]`)\\nTerminal: `tmux paste-buffer`\",\n    category: \"Copy/Paste Commands\",\n    icon: Icon.Clipboard,\n    benefit: \"Paste the contents of the copy buffer into your current pane.\",\n  },\n  {\n    id: \"save-buffer\",\n    command: \"tmux save-buffer <file_path>\",\n    description:\n      \"Saves the current copy buffer to a file. (Terminal: `tmux save-buffer <file_path>`) (No default shortcut)\",\n    category: \"Copy/Paste Commands\",\n    icon: Icon.Document,\n    benefit: \"Store the contents of your buffer to a file for backup or further analysis.\",\n  },\n  {\n    id: \"show-buffer\",\n    command: \"tmux show-buffer\",\n    description:\n      \"Displays the contents of the current copy buffer. (Terminal: `tmux show-buffer`) (No default shortcut)\",\n    category: \"Copy/Paste Commands\",\n    icon: Icon.Clipboard,\n    benefit: \"Quickly view the contents of your copy buffer.\",\n  },\n  {\n    id: \"set-buffer\",\n    command: \"tmux set-buffer <text>\",\n    description:\n      \"Sets the contents of the paste buffer to the given text. (Terminal: `tmux set-buffer <text>`) (No default shortcut)\",\n    category: \"Copy/Paste Commands\",\n    icon: Icon.Clipboard,\n    benefit: \"Manually update the buffer with custom content.\",\n  },\n  {\n    id: \"list-buffers\",\n    command: \"tmux list-buffers\",\n    description: \"Lists all buffers stored in tmux. (Terminal: `tmux list-buffers`) (No default shortcut)\",\n    category: \"Copy/Paste Commands\",\n    icon: Icon.List,\n    benefit: \"Manage and review multiple copy buffers within your session.\",\n  },\n  {\n    id: \"choose-buffer\",\n    command: \"tmux choose-buffer\",\n    description:\n      \"Opens an interface to choose from available buffers. (Terminal: `tmux choose-buffer`) (No default shortcut)\",\n    category: \"Copy/Paste Commands\",\n    icon: Icon.Clipboard,\n    benefit: \"Select and manage buffers using an interactive interface.\",\n  },\n\n  // Layout & Options\n  {\n    id: \"select-layout\",\n    command: \"tmux select-layout <layout>\",\n    description:\n      \"Changes the window layout (e.g., even-horizontal, main-vertical).\\n(Terminal: `tmux select-layout <layout>`) (No default shortcut)\",\n    category: \"Layout & Options\",\n    icon: Icon.AppWindow,\n    benefit: \"Automatically organize panes within a window using predefined layouts.\",\n  },\n  {\n    id: \"toggle-synchronize-panes\",\n    command: \"tmux set-window-option synchronize-panes\",\n    description:\n      \"Toggles synchronized input for all panes.\\n(Terminal: `tmux set-window-option synchronize-panes`) (No default shortcut)\",\n    category: \"Layout & Options\",\n    icon: Icon.Sidebar,\n    benefit: \"Enable or disable synchronized input across all panes to run commands simultaneously.\",\n  },\n  {\n    id: \"set-option\",\n    command: \"tmux set-option -g <option> <value>\",\n    description: \"Sets a tmux option globally. (Terminal: `tmux set-option -g <option> <value>`) (No default shortcut)\",\n    category: \"Layout & Options\",\n    icon: Icon.Gear,\n    benefit: \"Customize tmux behavior by setting global options.\",\n  },\n  {\n    id: \"show-options\",\n    command: \"tmux show-options -g\",\n    description: \"Displays global tmux options. (Terminal: `tmux show-options -g`) (No default shortcut)\",\n    category: \"Layout & Options\",\n    icon: Icon.List,\n    benefit: \"Review current tmux settings and configurations.\",\n  },\n\n  // Miscellaneous Commands\n  {\n    id: \"command-prompt\",\n    command: \"tmux command-prompt\",\n    description:\n      \"Opens the tmux command prompt. Shortcut: `<C-b> + :` (or `<Leader> + :`)\\nTerminal: `tmux command-prompt`\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.Terminal,\n    benefit: \"Open an interactive prompt to enter tmux commands.\",\n  },\n  {\n    id: \"list-keys\",\n    command: \"tmux list-keys\",\n    description: \"Displays current key bindings.\\n(Terminal: `tmux list-keys`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.List,\n    benefit: \"View all key bindings to customize or learn the shortcuts in tmux.\",\n  },\n  {\n    id: \"reload-config\",\n    command: \"tmux source-file ~/.tmux.conf\",\n    description:\n      \"Reloads your tmux configuration file.\\n(Terminal: `tmux source-file ~/.tmux.conf`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.RotateClockwise,\n    benefit: \"Reload your tmux configuration to apply recent changes.\",\n  },\n  {\n    id: \"lock-session\",\n    command: \"tmux lock-session\",\n    description: \"Locks the current tmux session.\\n(Terminal: `tmux lock-session`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.Lock,\n    benefit: \"Secure your session by locking it when you step away.\",\n  },\n  {\n    id: \"clock-mode\",\n    command: \"tmux clock-mode\",\n    description: \"Displays a clock in the current pane. (Terminal: `tmux clock-mode`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.Clock,\n    benefit: \"Keep track of time directly within your terminal.\",\n  },\n  {\n    id: \"display-message\",\n    command: \"tmux display-message 'Message'\",\n    description:\n      \"Displays a message in the tmux status line. (Terminal: `tmux display-message 'Message'`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.Message,\n    benefit: \"Show notifications or custom messages on the tmux status line.\",\n  },\n  {\n    id: \"list-commands\",\n    command: \"tmux list-commands\",\n    description: \"Lists all available tmux commands. (Terminal: `tmux list-commands`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.List,\n    benefit: \"Discover all commands available in tmux for extended functionality.\",\n  },\n  {\n    id: \"run-shell\",\n    command: \"tmux run-shell '<command>'\",\n    description:\n      \"Runs a shell command from within tmux. (Terminal: `tmux run-shell '<command>'`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.Terminal,\n    benefit: \"Execute external shell commands without leaving tmux.\",\n  },\n  {\n    id: \"if-shell\",\n    command: \"tmux if-shell '<condition>' '<command>' '<alternate>'\",\n    description:\n      \"Evaluates a shell command and runs a tmux command based on its result. (Terminal: `tmux if-shell '<condition>' '<command>' '<alternate>'`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.QuestionMark,\n    benefit: \"Conditionally execute commands based on shell command outcomes.\",\n  },\n  {\n    id: \"confirm-before\",\n    command: \"tmux confirm-before -p 'Are you sure?' '<command>'\",\n    description:\n      \"Prompts for confirmation before executing a command. (Terminal: `tmux confirm-before -p 'Are you sure?' '<command>'`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.QuestionMark,\n    benefit: \"Prevent accidental execution of potentially dangerous commands.\",\n  },\n  {\n    id: \"wait-for\",\n    command: \"tmux wait-for <target>\",\n    description:\n      \"Waits until a signal is received on a specified target. (Terminal: `tmux wait-for <target>`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.Stopwatch,\n    benefit: \"Synchronize actions in tmux by waiting for a specific event.\",\n  },\n  {\n    id: \"refresh-client\",\n    command: \"tmux refresh-client -S\",\n    description: \"Refreshes the tmux client display. (Terminal: `tmux refresh-client -S`) (No default shortcut)\",\n    category: \"Miscellaneous Commands\",\n    icon: Icon.RotateClockwise,\n    benefit: \"Force a refresh of the client display to update changes.\",\n  },\n\n  // Zoom Commands\n  {\n    id: \"toggle-zoom\",\n    command: \"tmux resize-pane -Z\",\n    description:\n      \"Toggles zoom for the active pane. Shortcut: `<C-b> + z` (or `<Leader> + z`)\\nTerminal: `tmux resize-pane -Z`\",\n    category: \"Zoom Commands\",\n    icon: Icon.Maximize,\n    benefit:\n      \"Maximize the current pane to fill the entire window for focused work, then toggle back to the original layout.\",\n  },\n];\n", "import { Detail, ActionPanel, Action, showToast, Toast } from \"@raycast/api\";\nimport { TmuxCommand } from \"./tmuxCommands\";\n\ninterface CommandDetailProps {\n  command: TmuxCommand;\n}\n\nexport default function CommandDetail({ command }: CommandDetailProps) {\n  const markdown = `\n# \u2699\uFE0F ${command.id}\n---\n\n## \uD83E\uDDD1\u200D\uD83D\uDCBB Terminal Command:\n\\`\\`\\`\n${command.command}\n\\`\\`\\`\n\n## \u2328\uFE0F Keyboard Shortcut & Usage:\n${command.description}\n\n${command.benefit ? `## \uD83D\uDCA1 Why Use This Command?\\n${command.benefit}\\n` : \"\"}\n\n---\n\n*Tip:* If you remap your prefix from \\`<C-b>\\` to \\`<Leader>\\`, substitute accordingly.\n  `;\n\n  return (\n    <Detail\n      markdown={markdown}\n      navigationTitle={command.id}\n      actions={\n        <ActionPanel>\n          <Action.CopyToClipboard\n            title=\"Copy Command\"\n            content={command.command}\n            onCopy={async () => {\n              await showToast({ style: Toast.Style.Success, title: \"Command copied!\" });\n            }}\n          />\n        </ActionPanel>\n      }\n    />\n  );\n}\n"],
  "mappings": "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mBACT,YACE,wGACF,SAAU,mBACV,KAAM,OAAK,MACX,QAAS,yEACX,EACA,CACE,GAAI,eACJ,QAAS,oBACT,YAAa,uGACb,SAAU,mBACV,KAAM,OAAK,KACX,QAAS,oEACX,EACA,CACE,GAAI,gBACJ,QAAS,sCACT,YACE,2GACF,SAAU,mBACV,KAAM,OAAK,WACX,QAAS,uDACX,EAGA,CACE,GAAI,aACJ,QAAS,mCACT,YACE,gHACF,SAAU,kBACV,KAAM,OAAK,QACX,QAAS,4EACX,EACA,CACE,GAAI,gBACJ,QAAS,gCACT,YACE,mHACF,SAAU,kBACV,KAAM,OAAK,OACX,QAAS,4EACX,EACA,CACE,GAAI,cACJ,QAAS,mBACT,YAAa,oGACb,SAAU,kBACV,KAAM,OAAK,QACX,QAAS,8DACX,EACA,CACE,GAAI,eACJ,QAAS,oBACT,YACE,6GACF,SAAU,kBACV,KAAM,OAAK,QACX,QAAS,6DACX,EACA,CACE,GAAI,cACJ,QAAS,mBACT,YAAa,oGACb,SAAU,kBACV,KAAM,OAAK,QACX,QAAS,yDACX,EACA,CACE,GAAI,kBACJ,QAAS,uBACT,YACE,4GACF,SAAU,kBACV,KAAM,OAAK,QACX,QAAS,oEACX,EACA,CACE,GAAI,cACJ,QAAS,mBACT,YACE,6GACF,SAAU,kBACV,KAAM,OAAK,QACX,QAAS,kDACX,EACA,CACE,GAAI,gBACJ,QAAS,+CACT,YACE,sHACF,SAAU,kBACV,KAAM,OAAK,QACX,QAAS,sDACX,EACA,CACE,GAAI,iBACJ,QAAS,0CACT,YACE,4IACF,SAAU,kBACV,KAAM,OAAK,gBACX,QAAS,2DACX,EAGA,CACE,GAAI,wBACJ,QAAS,uBACT,YACE,0GACF,SAAU,gBACV,KAAM,OAAK,SACX,QAAS,uEACX,EACA,CACE,GAAI,0BACJ,QAAS,uBACT,YACE,4GACF,SAAU,gBACV,KAAM,OAAK,SACX,QAAS,oEACX,EACA,CACE,GAAI,iBACJ,QAAS,sBACT,YACE,0HACF,SAAU,gBACV,KAAM,OAAK,QACX,QAAS,8CACX,EACA,CACE,GAAI,mBACJ,QAAS,sBACT,YACE,8HACF,SAAU,gBACV,KAAM,OAAK,UACX,QAAS,gDACX,EACA,CACE,GAAI,mBACJ,QAAS,sBACT,YACE,gJACF,SAAU,gBACV,KAAM,OAAK,UACX,QAAS,sCACX,EACA,CACE,GAAI,oBACJ,QAAS,sBACT,YACE,mJACF,SAAU,gBACV,KAAM,OAAK,WACX,QAAS,uCACX,EACA,CACE,GAAI,gBACJ,QAAS,qBACT,YACE,0HACF,SAAU,gBACV,KAAM,OAAK,QACX,QAAS,kDACX,EACA,CACE,GAAI,YACJ,QAAS,iBACT,YACE,4HACF,SAAU,gBACV,KAAM,OAAK,MACX,QAAS,sCACX,EACA,CACE,GAAI,YACJ,QAAS,6CACT,YACE,yGACF,SAAU,gBACV,KAAM,OAAK,eACX,QAAS,sDACX,EACA,CACE,GAAI,YACJ,QAAS,6CACT,YACE,mIACF,SAAU,gBACV,KAAM,OAAK,eACX,QAAS,uCACX,EACA,CACE,GAAI,aACJ,QAAS,kBACT,YAAa,sGACb,SAAU,gBACV,KAAM,OAAK,OACX,QAAS,oDACX,EACA,CACE,GAAI,YACJ,QAAS,mDACT,YACE,iJACF,SAAU,gBACV,KAAM,OAAK,eACX,QAAS,+DACX,EACA,CACE,GAAI,eACJ,QAAS,yBACT,YACE,wGACF,SAAU,gBACV,KAAM,OAAK,SACX,QAAS,2DACX,EACA,CACE,GAAI,aACJ,QAAS,kBACT,YAAa,6FACb,SAAU,gBACV,KAAM,OAAK,KACX,QAAS,6DACX,EACA,CACE,GAAI,YACJ,QAAS,uCACT,YACE,oIACF,SAAU,gBACV,KAAM,OAAK,SACX,QAAS,sEACX,EACA,CACE,GAAI,eACJ,QAAS,oCACT,YACE,2HACF,SAAU,gBACV,KAAM,OAAK,gBACX,QAAS,wEACX,EAGA,CACE,GAAI,mBACJ,QAAS,yBACT,YAAa,kGACb,SAAU,kBACV,KAAM,OAAK,YACX,QAAS,wDACX,EACA,CACE,GAAI,oBACJ,QAAS,yBACT,YAAa,oGACb,SAAU,kBACV,KAAM,OAAK,aACX,QAAS,yDACX,EACA,CACE,GAAI,iBACJ,QAAS,wBACT,YAAa,6FACb,SAAU,kBACV,KAAM,OAAK,UACX,QAAS,wDACX,EACA,CACE,GAAI,mBACJ,QAAS,wBACT,YAAa,kGACb,SAAU,kBACV,KAAM,OAAK,YACX,QAAS,2DACX,EAGA,CACE,GAAI,YACJ,QAAS,iBACT,YACE,uHACF,SAAU,sBACV,KAAM,OAAK,UACX,QAAS,yEACX,EACA,CACE,GAAI,eACJ,QAAS,oBACT,YACE,wGACF,SAAU,sBACV,KAAM,OAAK,UACX,QAAS,+DACX,EACA,CACE,GAAI,cACJ,QAAS,+BACT,YACE,4GACF,SAAU,sBACV,KAAM,OAAK,SACX,QAAS,6EACX,EACA,CACE,GAAI,cACJ,QAAS,mBACT,YACE,yGACF,SAAU,sBACV,KAAM,OAAK,UACX,QAAS,gDACX,EACA,CACE,GAAI,aACJ,QAAS,yBACT,YACE,sHACF,SAAU,sBACV,KAAM,OAAK,UACX,QAAS,iDACX,EACA,CACE,GAAI,eACJ,QAAS,oBACT,YAAa,0FACb,SAAU,sBACV,KAAM,OAAK,KACX,QAAS,8DACX,EACA,CACE,GAAI,gBACJ,QAAS,qBACT,YACE,8GACF,SAAU,sBACV,KAAM,OAAK,UACX,QAAS,2DACX,EAGA,CACE,GAAI,gBACJ,QAAS,8BACT,YACE,qIACF,SAAU,mBACV,KAAM,OAAK,UACX,QAAS,wEACX,EACA,CACE,GAAI,2BACJ,QAAS,2CACT,YACE,0HACF,SAAU,mBACV,KAAM,OAAK,QACX,QAAS,uFACX,EACA,CACE,GAAI,aACJ,QAAS,sCACT,YAAa,uGACb,SAAU,mBACV,KAAM,OAAK,KACX,QAAS,oDACX,EACA,CACE,GAAI,eACJ,QAAS,uBACT,YAAa,yFACb,SAAU,mBACV,KAAM,OAAK,KACX,QAAS,kDACX,EAGA,CACE,GAAI,iBACJ,QAAS,sBACT,YACE,4GACF,SAAU,yBACV,KAAM,OAAK,SACX,QAAS,oDACX,EACA,CACE,GAAI,YACJ,QAAS,iBACT,YAAa,qFACb,SAAU,yBACV,KAAM,OAAK,KACX,QAAS,oEACX,EACA,CACE,GAAI,gBACJ,QAAS,gCACT,YACE,2GACF,SAAU,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",
  "names": ["tmux_cheatsheet_exports", "__export", "Command", "__toCommonJS", "import_api", "import_react", "isArray", "value", "getTag", "INFINITY", "baseToString", "result", "toString", "isString", "isNumber", "isBoolean", "isObjectLike", "isObject", "isDefined", "isBlank", "INCORRECT_INDEX_TYPE", "LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY", "key", "PATTERN_LENGTH_TOO_LARGE", "max", "MISSING_KEY_PROPERTY", "name", "INVALID_KEY_WEIGHT_VALUE", "hasOwn", "KeyStore", "keys", "totalWeight", "obj", "createKey", "keyId", "path", "id", "src", "weight", "getFn", "isString", "isArray", "createKeyPath", "createKeyId", "get", "list", "arr", "deepGet", "index", "isDefined", "value", "isNumber", "isBoolean", "toString", "i", "len", "MatchOptions", "BasicOptions", "a", "b", "FuzzyOptions", "AdvancedOptions", "Config", "SPACE", "norm", "mantissa", "cache", "m", "numTokens", "n", "FuseIndex", "fieldNormWeight", "docs", "records", "idx", "doc", "docIndex", "item", "isBlank", "record", "keyIndex", "subRecords", "stack", "nestedArrIndex", "subRecord", "k", "createIndex", "myIndex", "parseIndex", "data", "computeScore$1", "pattern", "errors", "currentLocation", "expectedLocation", "distance", "ignoreLocation", "accuracy", "proximity", "convertMaskToIndices", "matchmask", "minMatchCharLength", "indices", "start", "end", "match", "MAX_BITS", "search", "text", "patternAlphabet", "location", "threshold", "findAllMatches", "includeMatches", "patternLen", "textLen", "currentThreshold", "bestLocation", "computeMatches", "matchMask", "score", "lastBitArr", "finalScore", "binMax", "mask", "binMin", "binMid", "finish", "bitArr", "j", "charMatch", "result", "createPatternAlphabet", "char", "stripDiacritics", "str", "BitapSearch", "isCaseSensitive", "ignoreDiacritics", "addChunk", "startIndex", "remainder", "allIndices", "totalScore", "hasMatches", "alphabet", "isMatch", "BaseMatch", "getMatch", "exp", "matches", "ExactMatch", "InverseExactMatch", "PrefixExactMatch", "InversePrefixExactMatch", "SuffixExactMatch", "InverseSuffixExactMatch", "FuzzyMatch", "IncludeMatch", "searchers", "searchersLen", "SPACE_RE", "OR_TOKEN", "parseQuery", "options", "query", "results", "queryItem", "found", "searcher", "token", "MultiMatchSet", "ExtendedSearch", "_", "numMatches", "qLen", "pLen", "type", "registeredSearchers", "register", "args", "createSearcher", "searcherClass", "LogicalOperator", "KeyType", "isExpression", "isPath", "isLeaf", "isObject", "convertToExplicit", "parse", "auto", "next", "isQueryPath", "node", "computeScore", "ignoreFieldNorm", "transformMatches", "transformScore", "format", "includeScore", "transformers", "transformer", "Fuse", "predicate", "limit", "shouldSort", "sortFn", "expression", "evaluate", "res", "child", "resultMap", "expResults", "import_api", "tmuxCommands", "import_api", "import_jsx_runtime", "CommandDetail", "command", "markdown", "import_jsx_runtime", "useDebounce", "value", "delay", "debouncedValue", "setDebouncedValue", "handler", "Command", "searchText", "setSearchText", "push", "debouncedSearchText", "fuseOptions", "fuse", "Fuse", "tmuxCommands", "filteredCommands", "result", "cmd", "CommandDetail"]
}
